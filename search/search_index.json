{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Home"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Problem 1 Examination of the Range as a Function of the Launch Angle 1. Theoretical Basis Governing Equations of Motion We begin by analyzing the motion of a projectile fired with an initial velocity \\(v_0\\) at an angle \\(\\theta\\) relative to the horizontal. Assuming there is no air resistance and gravity \\(g\\) acts downward, we can separate the motion into horizontal and vertical components. Motion Equations: Horizontal motion: $$ x(t) = v_0 \\cos(\\theta) t $$ Vertical motion: $$ y(t) = v_0 \\sin(\\theta) t - \\frac{1}{2} g t^2 $$ where: \\(x(t)\\) and \\(y(t)\\) represent the horizontal and vertical positions at time \\(t\\) , respectively. \\(v_0\\) is the initial velocity, \\(\\theta\\) is the launch angle, \\(g\\) is the acceleration due to gravity. Time of Flight and Range To determine the total time of flight, we set \\(y(t) = 0\\) and solve for \\(t\\) : \\[ 0 = v_0 \\sin(\\theta) t - \\frac{1}{2} g t^2 \\] Solving for \\(t\\) , we get two roots: \\(t = 0\\) (the initial launch time) and \\(t = \\frac{2 v_0 \\sin(\\theta)}{g}\\) . The latter represents the total time of flight, \\(t_f\\) : \\[ t_f = \\frac{2 v_0 \\sin(\\theta)}{g} \\] The horizontal range \\(R\\) corresponds to the horizontal distance covered during this time, so we substitute \\(t_f\\) into the equation for \\(x(t)\\) : \\[ R = v_0 \\cos(\\theta) t_f = v_0 \\cos(\\theta) \\frac{2 v_0 \\sin(\\theta)}{g} \\] Using the trigonometric identity \\(\\sin(2\\theta) = 2 \\sin(\\theta) \\cos(\\theta)\\) , we arrive at the range formula: \\[ R = \\frac{v_0^2 \\sin(2\\theta)}{g} \\] This expression reveals that the range is maximized when \\(\\sin(2\\theta) = 1\\) , which occurs when \\(2\\theta = 90^\\circ\\) , or \\(\\theta = 45^\\circ\\) . 2. Analysis of the Range Impact of Initial Conditions Initial velocity ( \\(v_0\\) ) : The range is directly proportional to the square of the initial velocity. Increasing \\(v_0\\) significantly enhances the range. Gravitational acceleration ( \\(g\\) ) : The range is inversely proportional to the gravitational acceleration. A higher value of \\(g\\) leads to a decrease in the range. Launch angle ( \\(\\theta\\) ) : The range reaches its maximum at \\(\\theta = 45^\\circ\\) , and the relationship is symmetric around this angle. Graphical Representation The following Python script demonstrates how the range varies with \\(\\theta\\) : import numpy as np import matplotlib.pyplot as plt def range_function(theta, v0, g=9.81): return (v0**2 * np.sin(2 * np.radians(theta))) / g # Parameters v0 = 25 # initial velocity in m/s theta = np.linspace(0, 90, 100) # range of angles in degrees g = 9.81 # gravity in m/s^2 # Compute ranges ranges = range_function(theta, v0, g) # Plot results plt.figure(figsize=(8, 5)) plt.plot(theta, ranges, label=f'v0 = {v0} m/s') plt.xlabel('Launch Angle (degrees)') plt.ylabel('Range (m)') plt.title('Projectile Range vs. Launch Angle') plt.legend() plt.grid(True) plt.show() 3. Real-World Applications Athletics : The principles of projectile motion are valuable in optimizing release angles for sports such as archery, shot put, and football. Technical Design : These principles are applied in weaponry, defense technologies, and the design of flight trajectories for spacecraft and guided projectiles. Cosmic Studies : Projectile motion concepts are used to model the paths of celestial bodies and for planning interplanetary missions. 4. Implementation A computational simulation can offer a deeper understanding of situations that involve air resistance. To include drag force, it is necessary to apply numerical solution methods (e.g., Runge-Kutta) for solving the corresponding differential equations. Example: Accounting for Air Resistance The dynamic equations that account for drag \\(F_d = -k v^2\\) are: \\[ m \\frac{d^2 x}{dt^2} = -k v_x^2 \\] \\[ m \\frac{d^2 y}{dt^2} = -mg - k v_y^2 \\] A numerical computation tool, like Python's SciPy library, can be employed to solve these equations. 5. Limitations and Further Considerations Atmospheric drag : Leads to asymmetry in the trajectory and reduces the projectile's range. Irregular terrain : Requires solutions for more complex boundary conditions. Wind effects : Influences the trajectory in unpredictable ways. Future research may explore the use of machine learning techniques to predict projectile paths in more complicated environments. Conclusion The study of projectile motion provides valuable mathematical and physical insights. Although the simplified model is a good approximation, real-world applications require numerical methods to handle non-ideal conditions.","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#problem-1","text":"Examination of the Range as a Function of the Launch Angle","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-theoretical-basis","text":"","title":"1. Theoretical Basis"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#governing-equations-of-motion","text":"We begin by analyzing the motion of a projectile fired with an initial velocity \\(v_0\\) at an angle \\(\\theta\\) relative to the horizontal. Assuming there is no air resistance and gravity \\(g\\) acts downward, we can separate the motion into horizontal and vertical components.","title":"Governing Equations of Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#motion-equations","text":"Horizontal motion: $$ x(t) = v_0 \\cos(\\theta) t $$ Vertical motion: $$ y(t) = v_0 \\sin(\\theta) t - \\frac{1}{2} g t^2 $$ where: \\(x(t)\\) and \\(y(t)\\) represent the horizontal and vertical positions at time \\(t\\) , respectively. \\(v_0\\) is the initial velocity, \\(\\theta\\) is the launch angle, \\(g\\) is the acceleration due to gravity.","title":"Motion Equations:"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#time-of-flight-and-range","text":"To determine the total time of flight, we set \\(y(t) = 0\\) and solve for \\(t\\) : \\[ 0 = v_0 \\sin(\\theta) t - \\frac{1}{2} g t^2 \\] Solving for \\(t\\) , we get two roots: \\(t = 0\\) (the initial launch time) and \\(t = \\frac{2 v_0 \\sin(\\theta)}{g}\\) . The latter represents the total time of flight, \\(t_f\\) : \\[ t_f = \\frac{2 v_0 \\sin(\\theta)}{g} \\] The horizontal range \\(R\\) corresponds to the horizontal distance covered during this time, so we substitute \\(t_f\\) into the equation for \\(x(t)\\) : \\[ R = v_0 \\cos(\\theta) t_f = v_0 \\cos(\\theta) \\frac{2 v_0 \\sin(\\theta)}{g} \\] Using the trigonometric identity \\(\\sin(2\\theta) = 2 \\sin(\\theta) \\cos(\\theta)\\) , we arrive at the range formula: \\[ R = \\frac{v_0^2 \\sin(2\\theta)}{g} \\] This expression reveals that the range is maximized when \\(\\sin(2\\theta) = 1\\) , which occurs when \\(2\\theta = 90^\\circ\\) , or \\(\\theta = 45^\\circ\\) .","title":"Time of Flight and Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-analysis-of-the-range","text":"","title":"2. Analysis of the Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#impact-of-initial-conditions","text":"Initial velocity ( \\(v_0\\) ) : The range is directly proportional to the square of the initial velocity. Increasing \\(v_0\\) significantly enhances the range. Gravitational acceleration ( \\(g\\) ) : The range is inversely proportional to the gravitational acceleration. A higher value of \\(g\\) leads to a decrease in the range. Launch angle ( \\(\\theta\\) ) : The range reaches its maximum at \\(\\theta = 45^\\circ\\) , and the relationship is symmetric around this angle.","title":"Impact of Initial Conditions"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#graphical-representation","text":"The following Python script demonstrates how the range varies with \\(\\theta\\) : import numpy as np import matplotlib.pyplot as plt def range_function(theta, v0, g=9.81): return (v0**2 * np.sin(2 * np.radians(theta))) / g # Parameters v0 = 25 # initial velocity in m/s theta = np.linspace(0, 90, 100) # range of angles in degrees g = 9.81 # gravity in m/s^2 # Compute ranges ranges = range_function(theta, v0, g) # Plot results plt.figure(figsize=(8, 5)) plt.plot(theta, ranges, label=f'v0 = {v0} m/s') plt.xlabel('Launch Angle (degrees)') plt.ylabel('Range (m)') plt.title('Projectile Range vs. Launch Angle') plt.legend() plt.grid(True) plt.show()","title":"Graphical Representation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-real-world-applications","text":"Athletics : The principles of projectile motion are valuable in optimizing release angles for sports such as archery, shot put, and football. Technical Design : These principles are applied in weaponry, defense technologies, and the design of flight trajectories for spacecraft and guided projectiles. Cosmic Studies : Projectile motion concepts are used to model the paths of celestial bodies and for planning interplanetary missions.","title":"3. Real-World Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#4-implementation","text":"A computational simulation can offer a deeper understanding of situations that involve air resistance. To include drag force, it is necessary to apply numerical solution methods (e.g., Runge-Kutta) for solving the corresponding differential equations.","title":"4. Implementation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#example-accounting-for-air-resistance","text":"The dynamic equations that account for drag \\(F_d = -k v^2\\) are: \\[ m \\frac{d^2 x}{dt^2} = -k v_x^2 \\] \\[ m \\frac{d^2 y}{dt^2} = -mg - k v_y^2 \\] A numerical computation tool, like Python's SciPy library, can be employed to solve these equations.","title":"Example: Accounting for Air Resistance"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#5-limitations-and-further-considerations","text":"Atmospheric drag : Leads to asymmetry in the trajectory and reduces the projectile's range. Irregular terrain : Requires solutions for more complex boundary conditions. Wind effects : Influences the trajectory in unpredictable ways. Future research may explore the use of machine learning techniques to predict projectile paths in more complicated environments.","title":"5. Limitations and Further Considerations"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#conclusion","text":"The study of projectile motion provides valuable mathematical and physical insights. Although the simplified model is a good approximation, real-world applications require numerical methods to handle non-ideal conditions.","title":"Conclusion"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Problem 2 Exploring the Dynamics of a Forced Damped Rotational System 1. Theoretical Basis Governing Equation The motion of a forced damped rotational system is described by the nonlinear differential equation: \\[ I \\frac{d^2\\alpha}{dt^2} + c \\frac{d\\alpha}{dt} + k \\sin\\alpha = T_0 \\cos(\\Omega t) \\] where: - \\(\\alpha\\) represents the angular displacement, - \\(c\\) is the damping coefficient, - \\(k\\) is the restoring torque coefficient, - \\(I\\) is the moment of inertia, - \\(T_0\\) is the amplitude of the external driving torque, - \\(\\Omega\\) is the driving frequency. Approximate Solutions for Small Rotations For small angular displacements ( \\( \\alpha \\approx \\sin \\alpha \\) ), the equation simplifies to: \\[ I \\frac{d^2\\alpha}{dt^2} + c \\frac{d\\alpha}{dt} + k \\alpha = T_0 \\cos(\\Omega t) \\] This represents a damped, driven rotational harmonic oscillator, which can be solved using standard methods. The steady-state solution is given by: \\[ \\alpha(t) = \\alpha_0 e^{-ct/2I} + A_r \\cos(\\Omega t - \\phi) \\] where \\( A_r \\) and \\( \\phi \\) depend on \\( T_0, c, \\Omega \\) , and other system parameters. Resonance Conditions Resonance occurs when the driving frequency \\( \\Omega \\) approaches the natural frequency \\( \\Omega_0 = \\sqrt{k/I} \\) , resulting in large oscillations in rotational motion. At resonance, energy transfer is maximized, which has significant applications in mechanical design and rotational systems. 2. Analysis of Dynamics Impact of System Parameters Damping Coefficient ( \\( c \\) ) : Higher damping reduces rotational motion and contributes to system stability. Driving Torque Amplitude ( \\( T_0 \\) ) : Increased amplitudes can induce nonlinear dynamics and cause phase transitions. Driving Frequency ( \\( \\Omega \\) ) : Specific frequencies may lead to resonance or give rise to complex oscillatory behaviors. Transition to Nonlinear Behavior By varying \\( T_0 \\) and \\( \\Omega \\) , the system can transition from simple rotational motion to more complex and unpredictable dynamics. These behaviors can be analyzed using: Phase Space Plots : Graphs of \\( \\alpha \\) versus \\( d\\alpha/dt \\) to explore system stability. Discrete Mapping Analysis : Time-sampled data to detect periodic or irregular behaviors. Parameter Variation Diagrams : Visual representations of how system behavior evolves as parameters are modified. 3. Real-World Applications The forced damped rotational system model is applicable to various practical systems: - Rotational Energy Harvesters : Used to optimize the conversion of kinetic energy into electrical power. - Structural Dynamics in Rotating Systems : Helps in analyzing oscillations that might lead to mechanical failures. - Rotational Actuators : Similar to controlled rotational devices that incorporate damping and external torque inputs. 4. Computational Simulation Below is a Python script to model and visualize the behavior of the forced damped rotational system. import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp def forced_damped_rotational(t, y, c, k, I, T0, Omega): alpha, alpha_dot = y dalpha_dt = alpha_dot dalpha_dot_dt = (-c * alpha_dot - k * np.sin(alpha) + T0 * np.cos(Omega * t)) / I return [dalpha_dt, dalpha_dot_dt] # Parameters c = 0.2 # damping coefficient k = 9.81 # restoring torque coefficient I = 1.0 # moment of inertia T0 = 1.2 # driving torque amplitude Omega = 2.0 # driving frequency y0 = [0.1, 0] # initial conditions: [alpha(0), alpha_dot(0)] t_span = (0, 50) # simulation time t_eval = np.linspace(0, 50, 1000) # time steps # Solve ODE sol = solve_ivp(forced_damped_rotational, t_span, y0, t_eval=t_eval, args=(c, k, I, T0, Omega)) # Plot results plt.figure(figsize=(8, 5)) plt.plot(sol.t, sol.y[0], label='Alpha (rad)') plt.xlabel('Time (s)') plt.ylabel('Angle (rad)') plt.title('Forced Damped Rotational System Motion') plt.legend() plt.grid() plt.show() This script numerically solves the rotational system equation and plots ( \\alpha(t) ) over time. 5. Limitations and Extensions Limitations : The model assumes a point mass rotational system and neglects factors like friction and air resistance. Extensions : Nonlinear damping (e.g., air drag proportional to the square of velocity). Irregular driving torques to simulate non-periodic forcing. Coupled rotational systems to study synchronization phenomena. 6. Conclusion The forced damped rotational system displays a wide range of dynamic behaviors, from simple harmonic motion to chaotic oscillations. By adjusting parameters such as damping, driving force, and frequency, we can explore concepts like resonance, stability, and chaotic dynamics. This provides valuable insights into fundamental physics as well as practical engineering applications.","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2","text":"Exploring the Dynamics of a Forced Damped Rotational System","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#1-theoretical-basis","text":"","title":"1. Theoretical Basis"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#governing-equation","text":"The motion of a forced damped rotational system is described by the nonlinear differential equation: \\[ I \\frac{d^2\\alpha}{dt^2} + c \\frac{d\\alpha}{dt} + k \\sin\\alpha = T_0 \\cos(\\Omega t) \\] where: - \\(\\alpha\\) represents the angular displacement, - \\(c\\) is the damping coefficient, - \\(k\\) is the restoring torque coefficient, - \\(I\\) is the moment of inertia, - \\(T_0\\) is the amplitude of the external driving torque, - \\(\\Omega\\) is the driving frequency.","title":"Governing Equation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#approximate-solutions-for-small-rotations","text":"For small angular displacements ( \\( \\alpha \\approx \\sin \\alpha \\) ), the equation simplifies to: \\[ I \\frac{d^2\\alpha}{dt^2} + c \\frac{d\\alpha}{dt} + k \\alpha = T_0 \\cos(\\Omega t) \\] This represents a damped, driven rotational harmonic oscillator, which can be solved using standard methods. The steady-state solution is given by: \\[ \\alpha(t) = \\alpha_0 e^{-ct/2I} + A_r \\cos(\\Omega t - \\phi) \\] where \\( A_r \\) and \\( \\phi \\) depend on \\( T_0, c, \\Omega \\) , and other system parameters.","title":"Approximate Solutions for Small Rotations"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#resonance-conditions","text":"Resonance occurs when the driving frequency \\( \\Omega \\) approaches the natural frequency \\( \\Omega_0 = \\sqrt{k/I} \\) , resulting in large oscillations in rotational motion. At resonance, energy transfer is maximized, which has significant applications in mechanical design and rotational systems.","title":"Resonance Conditions"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#2-analysis-of-dynamics","text":"","title":"2. Analysis of Dynamics"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#impact-of-system-parameters","text":"Damping Coefficient ( \\( c \\) ) : Higher damping reduces rotational motion and contributes to system stability. Driving Torque Amplitude ( \\( T_0 \\) ) : Increased amplitudes can induce nonlinear dynamics and cause phase transitions. Driving Frequency ( \\( \\Omega \\) ) : Specific frequencies may lead to resonance or give rise to complex oscillatory behaviors.","title":"Impact of System Parameters"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#transition-to-nonlinear-behavior","text":"By varying \\( T_0 \\) and \\( \\Omega \\) , the system can transition from simple rotational motion to more complex and unpredictable dynamics. These behaviors can be analyzed using: Phase Space Plots : Graphs of \\( \\alpha \\) versus \\( d\\alpha/dt \\) to explore system stability. Discrete Mapping Analysis : Time-sampled data to detect periodic or irregular behaviors. Parameter Variation Diagrams : Visual representations of how system behavior evolves as parameters are modified.","title":"Transition to Nonlinear Behavior"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#3-real-world-applications","text":"The forced damped rotational system model is applicable to various practical systems: - Rotational Energy Harvesters : Used to optimize the conversion of kinetic energy into electrical power. - Structural Dynamics in Rotating Systems : Helps in analyzing oscillations that might lead to mechanical failures. - Rotational Actuators : Similar to controlled rotational devices that incorporate damping and external torque inputs.","title":"3. Real-World Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#4-computational-simulation","text":"Below is a Python script to model and visualize the behavior of the forced damped rotational system. import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp def forced_damped_rotational(t, y, c, k, I, T0, Omega): alpha, alpha_dot = y dalpha_dt = alpha_dot dalpha_dot_dt = (-c * alpha_dot - k * np.sin(alpha) + T0 * np.cos(Omega * t)) / I return [dalpha_dt, dalpha_dot_dt] # Parameters c = 0.2 # damping coefficient k = 9.81 # restoring torque coefficient I = 1.0 # moment of inertia T0 = 1.2 # driving torque amplitude Omega = 2.0 # driving frequency y0 = [0.1, 0] # initial conditions: [alpha(0), alpha_dot(0)] t_span = (0, 50) # simulation time t_eval = np.linspace(0, 50, 1000) # time steps # Solve ODE sol = solve_ivp(forced_damped_rotational, t_span, y0, t_eval=t_eval, args=(c, k, I, T0, Omega)) # Plot results plt.figure(figsize=(8, 5)) plt.plot(sol.t, sol.y[0], label='Alpha (rad)') plt.xlabel('Time (s)') plt.ylabel('Angle (rad)') plt.title('Forced Damped Rotational System Motion') plt.legend() plt.grid() plt.show() This script numerically solves the rotational system equation and plots ( \\alpha(t) ) over time.","title":"4. Computational Simulation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#5-limitations-and-extensions","text":"Limitations : The model assumes a point mass rotational system and neglects factors like friction and air resistance. Extensions : Nonlinear damping (e.g., air drag proportional to the square of velocity). Irregular driving torques to simulate non-periodic forcing. Coupled rotational systems to study synchronization phenomena.","title":"5. Limitations and Extensions"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#6-conclusion","text":"The forced damped rotational system displays a wide range of dynamic behaviors, from simple harmonic motion to chaotic oscillations. By adjusting parameters such as damping, driving force, and frequency, we can explore concepts like resonance, stability, and chaotic dynamics. This provides valuable insights into fundamental physics as well as practical engineering applications.","title":"6. Conclusion"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/","text":"Set Theory","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/#set-theory","text":"","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/","text":"Relations","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/#relations","text":"","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/","text":"Functions","title":"Functions"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/#functions","text":"","title":"Functions"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/","text":"Combinatorics","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/#combinatorics","text":"","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/","text":"Number Theory","title":"Number Theory"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/#number-theory","text":"","title":"Number Theory"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/","text":"Sequences and Series","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/#sequences-and-series","text":"","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/","text":"Induction","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/#induction","text":"","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/","text":"Recurrence","title":"Recurrence"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/#recurrence","text":"","title":"Recurrence"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/","text":"Graph Theory","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/#graph-theory","text":"","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/","text":"Logic","title":"Logic"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/#logic","text":"","title":"Logic"}]}